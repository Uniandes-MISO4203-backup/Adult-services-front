import { Injectable } from '@angular/core';
import { Observable, throwError } from 'rxjs';
import { userModel } from '../../models/userInfoResponseModel';

import { HttpClient, HttpHeaders, HttpParams  } from '@angular/common/http';
import 'rxjs/add/operator/catch';

import { environment } from '../../environments/environment';
const API_URL = environment.apiURL;
const GET_PENDING = '/pendingadults';
const APPROVE_USER = '/approve-adult/';


@Injectable({
  providedIn: 'root'
})
export class GetInfoService  {
/**
    * Constructor of the service
    * @param http The HttpClient - This is necessary in order to perform requests
    */
   constructor(private http: HttpClient) { }

   getPendingUsers(): Observable<userModel[]> {
    const httpOptions = {
      headers: new HttpHeaders({
      })};
    return this.http.get<userModel[]>(API_URL + GET_PENDING, httpOptions);
  }

  approveUser(id): Observable<userModel> {
    const httpOptions = {
      headers: new HttpHeaders({
        'Content-Type':  'application/x-www-form-urlencoded'
      })};
      //const body = new HttpParams()
      //.set('approved', 'false');
    return this.http.put<userModel>(API_URL + APPROVE_USER + id, httpOptions);
  }

    /**
     * The method which handles the errors generated by the requests
     * @param error The error which the API REST returned
     */
    private handleError(error: any) { 
        return throwError(error.error.errorMessage);
    }
}